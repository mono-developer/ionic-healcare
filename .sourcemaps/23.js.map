{"version":3,"sources":["../../src/pages/select-medication/select-medication.ts","../../src/pages/select-medication/select-medication.module.ts"],"names":[],"mappings":"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","file":"23.js","sourcesContent":["import { Component } from '@angular/core';\nimport { NavController, ModalController, LoadingController, IonicPage } from 'ionic-angular';\nimport { Storage } from '@ionic/storage';\n\n\nimport { DependentService } from \"../../providers/dependent-service\";\nimport { RemindersService } from '../../providers/reminders-service';\nimport { BaseMedicineService } from \"../../providers/base-medicine-service\";\nimport { UserService } from \"../../providers/user-service\";\n@IonicPage()\n@Component({\n  selector: 'select-medication',\n  templateUrl: 'select-medication.html'\n})\nexport class SelectMedicationPage {\n\n  persons: any = [];\n\n  constructor(\n    public navCtrl: NavController,\n    public modalCtrl: ModalController,\n    public dependentService: DependentService,\n    public baseMedicineService: BaseMedicineService,\n    public remindersService: RemindersService,\n    public userService: UserService,\n    public storage: Storage,\n    public loadingCtrl: LoadingController\n  ) {\n  }\n\n  ionViewWillEnter() {\n    console.log('* Here is Select Medication Page *');\n    // this.persons = this.dependentService.getAll();\n    this.getDatas();\n\n  }\n\n  getDatas() {\n    let loading = this.loadingCtrl.create();\n    loading.present();\n\n    this.storage.get('email').then(val=>{\n      let email = val;\n      this.storage.get('auth_token').then(val=>{\n        let auth_token = val;\n        this.userService.getProfiles(email, auth_token)\n          .subscribe(\n            (data) => {\n              if(data.success == false){\n                loading.dismiss();\n              }else{\n                this.persons = data.profiles;\n                console.log(this.persons);\n                loading.dismiss();\n                this.persons.forEach(person => {\n                  this.remindersService.getForDependent(person.id)\n                  .then((res) => {\n                    let items = res;\n                    person.reminders = items;\n                    person.reminders.forEach(reminder => {\n                      this.baseMedicineService.getForm(reminder.form_Id)\n                      .then((res) => {\n                        reminder.form = res;\n                      }, (err) => {\n                        console.log(err);\n                        loading.dismiss();\n                      });\n\n                      this.baseMedicineService.getColor(reminder.color1_Id)\n                      .then((res) => {\n                        reminder.color1 = res;\n                      }, (err) => {\n                        console.log(err);\n                        loading.dismiss();\n                      });\n\n                      this.baseMedicineService.getColor(reminder.color2_Id)\n                      .then((res) => {\n                        reminder.color2 = res;\n                      }, (err) => {\n                        console.log(err);\n                        loading.dismiss();\n                      });\n                    });\n                  }, (err) => {\n                    console.log(err);\n                    loading.dismiss();\n                  })\n                });\n             }\n            },\n            (data) => {\n              loading.dismiss();\n            });\n        });\n    });\n  }\n\n  addMedication (id) {\n    this.navCtrl.push('AddMedicationPage' ,{id: id});\n  }\n\n  newReminder (id) {\n    this.navCtrl.push('NewReminderPage' ,{id: id});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/select-medication/select-medication.ts","import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SelectMedicationPage } from './select-medication';\n@NgModule({\n    declarations: [\n        SelectMedicationPage,\n    ],\n    imports: [\n        IonicPageModule.forChild(SelectMedicationPage),\n    ],\n    exports: [\n        SelectMedicationPage\n    ]\n})\nexport class SelectMedicationPageModule {\n    \n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/select-medication/select-medication.module.ts"],"sourceRoot":""}