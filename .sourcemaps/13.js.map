{"version":3,"sources":["../../src/pages/medical-imaging/medical-imaging.ts","../../src/pages/medical-imaging/custom-medical.ts","../../src/pages/medical-imaging/medical-imaging.module.ts"],"names":[],"mappings":"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","file":"13.js","sourcesContent":["import { Component } from '@angular/core';\nimport { NavController, ModalController, AlertController, LoadingController, NavParams, IonicPage } from 'ionic-angular';\nimport { Storage } from '@ionic/storage';\nimport { IonicStorageModule } from '@ionic/Storage';\nimport { UserService } from \"../../providers/user-service\";\nimport { Flags } from \"../../providers/flag\";\n@IonicPage()\n@Component({\n  selector: 'page-medical-imaging',\n  templateUrl: 'medical-imaging.html'\n})\nexport class MedicalImagingPage {\n  profile_id:any;\n  medicalData: any;\n  personData:any;\n  imagePath:any;\n  personName:any;\n  email:string;\n  auth_token:string;\n  constructor(\n    public navCtrl: NavController,\n    public modalCtrl: ModalController,\n    public navParams: NavParams,\n    public alertCtrl: AlertController,\n    public loadingCtrl: LoadingController,\n    public userService: UserService,\n    public storage: Storage,\n    private flagService: Flags\n  ) {\n    this.profile_id = navParams.get(\"profile_id\");\n    this.personData = navParams.get(\"personData\");\n    console.log('profile_id', this.profile_id);\n    this.imagePath =  this.personData.image_url.thumb;\n    this.personName = this.personData.last_name;\n    console.log('personData', this.personData);\n\n    this.email = \"\";\n    this.auth_token = \"\";\n  }\n\n  doRefresh(refresher) {\n    setTimeout(() => {\n      this.gettingdata();\n      refresher.complete();\n    }, 1000);\n  }\n\n  ngOnInit(){\n      this.flagService.setChangedFlag(false);\n      this.gettingdata();\n  }\n\n  ionViewDidEnter(){\n    if(this.flagService.getChangedFlag()){\n      this.gettingdata();\n    }\n  }\n\n  gettingdata(){\n    let loading = this.loadingCtrl.create();\n    var endValue = \"/medical_imagings\"\n    loading.present();\n    this.storage.get('email').then(val=>{\n      this.email = val;\n      this.storage.get('auth_token').then(val=>{\n        this.auth_token = val;\n        this.userService.dataGet(this.email, this.auth_token, this.profile_id, endValue)\n          .subscribe(\n            (data) => {\n              loading.dismiss();\n\n              if(data.success == false){\n                let alert = this.alertCtrl.create({\n                  title: \"Error\", subTitle: \"Get Data Error\", buttons: ['OK']\n                });\n                alert.present();\n                this.navCtrl.pop();\n              } else{\n                console.log(\"medicalData\", data);\n                this.medicalData = data.medical_imagings;\n              }\n          });\n      });\n    });\n  }\n\n  createMedicalData(){\n    console.log('go AddSureCellPage');\n    let profileModal = this.modalCtrl.create('MedicalEditPage', { save: 'save', profile_id: this.profile_id});\n    profileModal.onDidDismiss(data =>{\n      if(data){\n        this.gettingdata();\n      }\n    })\n    profileModal.present();\n  }\n\n  editMedicalData(event, id){\n    console.log(id);\n    this.navCtrl.push('MedicalEditPage',{ edit:'edit', id: id, profile_id: this.profile_id});\n  }\n\n  closePage(){\n    this.navCtrl.pop();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/medical-imaging/medical-imaging.ts","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'custom-medical',\n  template: `<div>{{customType}}</div>`\n})\nexport class CustomTypeComponent {\n\n  @Input() realType:any;\n  customType: string='';\n\n  ngOnInit(){\n    let type = this.realType.split('Other ');\n    if(type[1]){\n      this.customType = type[1]\n    } else {\n      this.customType = this.realType;\n    }\n  }\n\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/medical-imaging/custom-medical.ts","import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { MedicalImagingPage } from './medical-imaging';\nimport { CustomTypeComponent } from './custom-medical';\n@NgModule({\n    declarations: [\n        MedicalImagingPage,\n        CustomTypeComponent\n    ],\n    imports: [\n        IonicPageModule.forChild(MedicalImagingPage),\n    ],\n    exports: [\n        MedicalImagingPage,\n        CustomTypeComponent\n    ]\n})\nexport class MedicalImagingPageModule {\n    \n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/medical-imaging/medical-imaging.module.ts"],"sourceRoot":""}